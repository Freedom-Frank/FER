===============================================================================
FER2013 可视化功能 - WSL 命令清单（复制粘贴版）
===============================================================================

说明：打开 WSL 后，按顺序复制粘贴以下命令即可

===============================================================================
第一步：进入项目目录
===============================================================================

cd /mnt/e/Users/Meng/Projects/VScodeProjects/FER

-------------------------------------------------------------------------------
第二步：安装系统依赖（仅首次使用需要）
-------------------------------------------------------------------------------

sudo apt update

sudo apt install -y python3 python3-pip python3-dev libgl1-mesa-glx libglib2.0-0

-------------------------------------------------------------------------------
第三步：安装 Python 依赖（仅首次使用需要）
-------------------------------------------------------------------------------

pip3 install -r requirements.txt

-------------------------------------------------------------------------------
第四步：验证安装
-------------------------------------------------------------------------------

python3 -c "import cv2, matplotlib, mindspore; print('✓ 所有依赖安装成功！')"

-------------------------------------------------------------------------------
第五步：创建输出目录
-------------------------------------------------------------------------------

mkdir -p output/images output/batch output/videos output/webcam test_images

-------------------------------------------------------------------------------
第六步：检查模型文件
-------------------------------------------------------------------------------

ls -lh checkpoints/

# 应该看到 best.ckpt 或其他 .ckpt 文件
# 如果没有，需要先训练模型（见下方"可选：训练模型"）

===============================================================================
运行可视化功能（选择一种模式）
===============================================================================

-------------------------------------------------------------------------------
模式 1：处理单张图片（最简单的测试）
-------------------------------------------------------------------------------

# 替换 YOUR_IMAGE.jpg 为你的图片路径
python3 demo_visualization.py --mode image --ckpt checkpoints/best.ckpt --input YOUR_IMAGE.jpg

# 查看结果
ls output/images/

-------------------------------------------------------------------------------
模式 2：批量处理图片目录
-------------------------------------------------------------------------------

# 替换 YOUR_FOLDER 为你的图片目录
python3 demo_visualization.py --mode batch --ckpt checkpoints/best.ckpt --input YOUR_FOLDER/

# 查看结果
ls output/batch/

-------------------------------------------------------------------------------
模式 3：处理视频文件
-------------------------------------------------------------------------------

# 替换 YOUR_VIDEO.mp4 为你的视频路径
python3 demo_visualization.py --mode video --ckpt checkpoints/best.ckpt --input YOUR_VIDEO.mp4

# 查看结果
ls output/videos/

-------------------------------------------------------------------------------
模式 4：实时摄像头识别（需要配置摄像头）
-------------------------------------------------------------------------------

python3 demo_visualization.py --mode webcam --ckpt checkpoints/best.ckpt

# 按 'q' 退出，按 's' 保存当前帧

-------------------------------------------------------------------------------
模式 5：使用快速启动脚本（交互式）
-------------------------------------------------------------------------------

./quick_start.sh

# 然后按提示选择功能

-------------------------------------------------------------------------------
模式 6：查看帮助信息
-------------------------------------------------------------------------------

python3 demo_visualization.py --mode menu --ckpt checkpoints/best.ckpt

===============================================================================
可选：训练模型（如果没有模型文件）
===============================================================================

# 确保数据集文件存在
ls data/FER2013/fer2013.csv

# CPU 训练（较慢，适合测试）
python3 src/train.py --data_csv data/FER2013/fer2013.csv --device_target CPU --batch_size 32 --epochs 50

# GPU 训练（更快，需要 CUDA）
python3 src/train.py --data_csv data/FER2013/fer2013.csv --device_target GPU --batch_size 96 --epochs 100 --augment --mixup

===============================================================================
可选：GPU 加速（如果配置了 CUDA）
===============================================================================

# 检查 GPU 是否可用
nvidia-smi

# 使用 GPU 运行（在任何命令后加 --device GPU）
python3 demo_visualization.py --mode batch --ckpt checkpoints/best.ckpt --input YOUR_FOLDER/ --device GPU

===============================================================================
可选：配置 X11 显示（用于摄像头实时显示）
===============================================================================

# 安装 X11
sudo apt install -y x11-apps

# 设置 DISPLAY 环境变量
export DISPLAY=:0

# 永久生效（添加到 .bashrc）
echo 'export DISPLAY=:0' >> ~/.bashrc
source ~/.bashrc

# 测试（需要在 Windows 上先启动 VcXsrv 或 X410）
xclock

===============================================================================
完整示例：处理一张图片
===============================================================================

# 1. 进入目录
cd /mnt/e/Users/Meng/Projects/VScodeProjects/FER

# 2. 假设你有一张图片 test.jpg 在项目根目录

# 3. 运行处理
python3 demo_visualization.py --mode image --ckpt checkpoints/best.ckpt --input test.jpg

# 4. 查看结果
ls -lh output/images/

# 5. 如果在 Windows 中，可以用资源管理器打开
# 路径: e:\Users\Meng\Projects\VScodeProjects\FER\output\images\

===============================================================================
故障排除命令
===============================================================================

# 问题 1: 依赖安装失败
pip3 install --upgrade pip
pip3 cache purge
pip3 install -r requirements.txt

# 问题 2: OpenCV 错误
sudo apt install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev
pip3 uninstall opencv-python
pip3 install opencv-python

# 问题 3: matplotlib 后端错误
export MPLBACKEND=Agg
echo 'export MPLBACKEND=Agg' >> ~/.bashrc
source ~/.bashrc

# 问题 4: 权限错误
chmod -R 755 /mnt/e/Users/Meng/Projects/VScodeProjects/FER

===============================================================================
常用查看命令
===============================================================================

# 查看当前目录
pwd

# 列出文件
ls -la

# 查看 Python 版本
python3 --version

# 查看已安装的包
pip3 list | grep -E "mindspore|opencv|matplotlib"

# 查看模型文件
ls -lh checkpoints/

# 查看输出结果
ls -lh output/

# 查看帮助文档
cat VISUALIZATION_README.md
cat WSL_COMMANDS.md

===============================================================================
最简单的快速测试（3 条命令）
===============================================================================

cd /mnt/e/Users/Meng/Projects/VScodeProjects/FER
mkdir -p output/images
python3 demo_visualization.py --mode image --ckpt checkpoints/best.ckpt --input YOUR_IMAGE.jpg

# 替换 YOUR_IMAGE.jpg 为你的实际图片路径
# 然后在 output/images/ 目录查看结果

===============================================================================
相关文档
===============================================================================

WSL 完整命令:          cat WSL_COMMANDS.md
快速参考指南:          cat VISUALIZATION_README.md
完整使用文档:          cat docs/visualization.md
安装配置指南:          cat VISUALIZATION_SETUP.md
使用示例教程:          cat examples/visualization_examples.md

===============================================================================
说明
===============================================================================

1. 首次使用需要执行"第一步"到"第五步"
2. 后续使用只需执行"第一步"（进入目录）和"第六步"（运行功能）
3. 所有 YOUR_XXX 需要替换为实际的文件/目录路径
4. 在 Windows 资源管理器中可以直接访问输出目录
   路径: e:\Users\Meng\Projects\VScodeProjects\FER\output\

===============================================================================
